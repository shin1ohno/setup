name: Test Setup Scripts

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
    
    - name: Check bin scripts are executable
      run: |
        test -x bin/setup
        test -x bin/cookbook
    
    - name: Download mitamae binary
      run: |
        mkdir -p $HOME/tmp
        ./bin/setup
      
    - name: Verify mitamae installation
      run: |
        test -x bin/mitamae
        ./bin/mitamae version
    
    - name: Test darwin.rb in dry-run mode
      run: |
        export TMPDIR=$HOME/tmp
        ./bin/mitamae local darwin.rb --dry-run
      
    - name: Test individual roles in dry-run mode
      run: |
        export TMPDIR=$HOME/tmp
        echo -e 'include_cookbook "functions"\ninclude_role "core"' > test_core.rb && ./bin/mitamae local test_core.rb --dry-run
        echo -e 'include_cookbook "functions"\ninclude_role "programming"' > test_programming.rb && ./bin/mitamae local test_programming.rb --dry-run
        echo -e 'include_cookbook "functions"\ninclude_role "llm"' > test_llm.rb && ./bin/mitamae local test_llm.rb --dry-run
        echo -e 'include_cookbook "functions"\ninclude_role "network"' > test_network.rb && ./bin/mitamae local test_network.rb --dry-run
        echo -e 'include_cookbook "functions"\ninclude_role "extras"' > test_extras.rb && ./bin/mitamae local test_extras.rb --dry-run
        
    - name: Test individual cookbooks
      run: |
        export TMPDIR=$HOME/tmp
        echo -e 'include_cookbook "functions"\ninclude_cookbook "git"' > test_git.rb && ./bin/mitamae local test_git.rb --dry-run
        echo -e 'include_cookbook "functions"\ninclude_cookbook "homebrew"' > test_homebrew.rb && ./bin/mitamae local test_homebrew.rb --dry-run
        echo -e 'include_cookbook "functions"\ninclude_cookbook "zsh"' > test_zsh.rb && ./bin/mitamae local test_zsh.rb --dry-run

  test-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
    
    - name: Check bin scripts are executable
      run: |
        test -x bin/setup
        test -x bin/cookbook
    
    - name: Download mitamae binary
      run: |
        mkdir -p $HOME/tmp
        ./bin/setup
      
    - name: Verify mitamae installation
      run: |
        test -x bin/mitamae
        ./bin/mitamae version
    
    - name: Test linux.rb in dry-run mode
      run: |
        export TMPDIR=$HOME/tmp
        ./bin/mitamae local linux.rb --dry-run
      
    - name: Test individual roles in dry-run mode
      run: |
        export TMPDIR=$HOME/tmp
        echo -e 'include_cookbook "functions"\ninclude_role "core"' > test_core.rb && ./bin/mitamae local test_core.rb --dry-run
        echo -e 'include_cookbook "functions"\ninclude_role "programming"' > test_programming.rb && ./bin/mitamae local test_programming.rb --dry-run
        echo -e 'include_cookbook "functions"\ninclude_role "llm"' > test_llm.rb && ./bin/mitamae local test_llm.rb --dry-run
        echo -e 'include_cookbook "functions"\ninclude_role "network"' > test_network.rb && ./bin/mitamae local test_network.rb --dry-run
        echo -e 'include_cookbook "functions"\ninclude_role "extras"' > test_extras.rb && ./bin/mitamae local test_extras.rb --dry-run
        echo -e 'include_cookbook "functions"\ninclude_role "server"' > test_server.rb && ./bin/mitamae local test_server.rb --dry-run
        
    - name: Test individual cookbooks
      run: |
        export TMPDIR=$HOME/tmp
        echo -e 'include_cookbook "functions"\ninclude_cookbook "git"' > test_git.rb && ./bin/mitamae local test_git.rb --dry-run
        echo -e 'include_cookbook "functions"\ninclude_cookbook "zsh"' > test_zsh.rb && ./bin/mitamae local test_zsh.rb --dry-run
        echo -e 'include_cookbook "functions"\ninclude_cookbook "nodejs"' > test_nodejs.rb && ./bin/mitamae local test_nodejs.rb --dry-run

  syntax-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
    
    - name: Check Ruby syntax
      run: |
        echo "Checking Ruby syntax for all .rb files..."
        find . -name "*.rb" -exec ruby -c {} \;
        
    - name: Check for common issues
      run: |
        # Check for syntax errors in main files
        echo "Checking main entry points..."
        ruby -c darwin.rb
        ruby -c linux.rb
        
        # Check for required files
        test -f bin/setup
        test -f bin/cookbook
        test -f bin/mitamae || echo "mitamae binary will be downloaded by setup"
        
        # Check role files exist
        test -d roles/
        test -f roles/core/default.rb
        test -f roles/programming/default.rb
        test -f roles/llm/default.rb
        
        # Check functions helper exists
        test -f cookbooks/functions/default.rb
        
    - name: Validate JSON files
      run: |
        # Check if any JSON files exist and validate them
        if find . -name "*.json" -type f | head -1 | grep -q .; then
          echo "Validating JSON files..."
          find . -name "*.json" -exec python3 -m json.tool {} \; > /dev/null
        else
          echo "No JSON files found to validate"
        fi

  error-simulation:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
    
    - name: Download mitamae binary
      run: |
        mkdir -p $HOME/tmp
        ./bin/setup
      
    - name: Test error handling - invalid cookbook
      run: |
        # This should fail gracefully
        export TMPDIR=$HOME/tmp
        echo -e 'include_cookbook "functions"\ninclude_cookbook "nonexistent_cookbook"' > test_invalid_cookbook.rb
        ./bin/mitamae local test_invalid_cookbook.rb --dry-run || echo "Expected failure for nonexistent cookbook"
        
    - name: Test error handling - invalid role
      run: |
        # This should fail gracefully
        export TMPDIR=$HOME/tmp
        echo -e 'include_cookbook "functions"\ninclude_role "nonexistent_role"' > test_invalid_role.rb
        ./bin/mitamae local test_invalid_role.rb --dry-run || echo "Expected failure for nonexistent role"
        
    - name: Check mitamae version compatibility
      run: |
        ./bin/mitamae version
        echo "Mitamae version check completed"